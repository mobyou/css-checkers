@charset 'UTF-8';

/* Colors */

:root {
	--error-pic: "☠ ";
	--error-bg-color: white;
	--error-border-color: #be3f55;
	--error-font-color: #be3f55;
	--warn-pic: "⚠ ";
	--warn-bg-color: white;
	--warn-border-color: #0070fb;
	--warn-font-color: #0070fb;
}

/* Symbols 
*
* ☠[ERROR]
* var(--error-bg-color)
* var(--error-border-color)
* var(--error-font-color)
*
* ⚠[WARNING]
* var(--warn-bg-color)
* var(--warn-border-color)
* var(--warn-font-color)
*/

/* alert count with CSS
Thanks to Gaël Poupard https://ffoodd.github.io/a11y.css/
*/
html {
	counter-reset: error error-other error-link error-img error-label warning
		warning-other warning-href warning-https warning-target;
}
body::after {
	/*background-image:linear-gradient(to bottom, transparent, transparent 1.4em,var(--error-border-color) 1.4em,var(--error-border-color) 1.6em,transparent 1.6em, transparent 100%);*/

	background-image: linear-gradient(
		to bottom,
		transparent,
		transparent 1.4rem,
		var(--error-border-color) 1.4rem,
		var(--error-border-color) 1.6rem,
		transparent 1.6rem,
		transparent 1.6rem,
		transparent 2.9rem,
		var(--warn-border-color) 2.9rem,
		var(--warn-border-color) 3.1rem,
		transparent 2.9rem,
		transparent 100%
	);
	background-color: #333;
	background-position: 0.75em 0;
	background-repeat: no-repeat;
	background-size: 0.75em 100%;
	bottom: 1em;
	color: #D3E8EE;
	font: 700 1.125rem/1.5 sans-serif;
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
		Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
	height: auto;
	left: 1em;
	padding: 0.75rem 1rem 0.75rem 2rem;
	position: fixed;
	right: auto;
	top: auto;
	width: auto;
	white-space: pre;
	z-index: 2147483647;
	content: "Errors" ": " counter(error) " (link: " counter(error-link) ", img: "
		counter(error-img) ", label: " counter(error-label) ", other: "
		counter(error-other) ")" "\a" "Warnings" ": " counter(warning) " (href: "
		counter(warning-href) ", https: " counter(warning-https) ", target: "
		counter(warning-target) ", other: " counter(warning-other) ")" "\a";
}
body::after,
#feedbackJSChecker {
    border: #D3E8EE solid 1px;
    box-shadow: 0px 0px 61px 0px rgba(115,115,115,0.62);
    border-radius: 4px;
    color: #D3E8EE;
}

head {
	display: block;
}

/* Framework #01
 * Bootstrap inheritance check
 */
*:not(.row) > [class^="col-"] {
	counter-increment: error error-other !important;
	outline: 4px solid (--error-border-color) !important;
	outline-offset: -4px !important;
}
*:not(.row) > [class^="col-"]:first-child::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-fw-01) !important;
}

/* Framework #02
 * Floats inheritance check for Bootstrap, Google Material Design and Zurb Foundation
 */
*:not(.clearfix) > .float-left,
*:not(.clearfix) > .float-right {
	counter-increment: error error-other !important;
	outline: 4px solid (--error-border-color) !important;
	outline-offset: -4px !important;
}
*:not(.clearfix) > .float-left::before,
*:not(.clearfix) > .float-right::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-fw-02) !important;
}

/* HTML #01
 * No language is bad
 */
html:not([lang]),
html[lang=""] {
	counter-increment: error error-other !important;
}
html:not([lang]) body::before,
html[lang=""] body::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-01) !important;
}

/* HTML #02
 * Charset
 */
meta[charset]:not([charset="UTF-8"]) {
	/* keep header pseudo elements visible */
	display: block;
	counter-increment: error error-other !important;
}
meta[charset]:not([charset="UTF-8"])::after {
	display: block;
	margin-bottom: 1rem;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-02) !important;
}

/* HTML #03
 * Charset position
 */
meta[charset="UTF-8"]:not(:first-child) {
	display: block;
	counter-increment: error error-other !important;
}
meta[charset="UTF-8"]:not(:first-child)::after {
	display: block;
	margin-bottom: 1rem;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-03) !important;
}

/* HTML #04
 * Viewport
 */
meta[name="viewport"][content*="user-scalable=no"],
meta[name="viewport"][content*="maximum-scale"],
meta[name="viewport"][content*="minimum-scale"] {
	display: block;
	counter-increment: error error-other !important;
}
meta[name="viewport"][content*="user-scalable=no"]::after,
meta[name="viewport"][content*="maximum-scale"]::after,
meta[name="viewport"][content*="minimum-scale"]::after {
	display: block;
	margin-bottom: 1rem;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-04) !important;
}

/* HTML #05
 * No meta refresh
 */
head > meta[http-equiv="refresh"] {
	/* rend les pseudo-éléments visibles dans le header */
	display: block;
	counter-increment: error error-other !important;
}
head > meta[http-equiv="refresh"]::after {
	display: block;
	margin-bottom: 1rem;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-05) !important;
}

/* 
 * a11y.css some alerts selection from the huge work of Gaël Poupard https://ffoodd.github.io/a11y.css/
*/

/* HTML #06
 * Badly bound label: use for to bound it with the input id's 
 */
label[for=""],
label[for=" "] {
	counter-increment: error error-label !important;
	outline: 4px solid (--error-border-color) !important;
	outline-offset: -4px !important;
}
label[for=""]::after,
label[for=" "]::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-06) !important;
}

/* HTML #07
 * Id name with bad syntax
 */
[id^="1"],
[id^="2"],
[id^="3"],
[id^="4"],
[id^="5"],
[id^="6"],
[id^="7"],
[id^="8"],
[id^="9"],
[id^="0"],
[id^="--"],
[id^="-1"],
[id^="-2"],
[id^="-3"],
[id^="-4"],
[id^="-5"],
[id^="-6"],
[id^="-7"],
[id^="-8"],
[id^="-9"],
[id^="-0"] {
	counter-increment: error error-other !important;
	outline: 4px solid (--error-border-color) !important;
	outline-offset: -4px !important;
}
[id^="1"]::after,
[id^="2"]::after,
[id^="3"]::after,
[id^="4"]::after,
[id^="5"]::after,
[id^="6"]::after,
[id^="7"]::after,
[id^="8"]::after,
[id^="9"]::after,
[id^="0"]::after,
[id^="--"]::after,
[id^="-1"]::after,
[id^="-2"]::after,
[id^="-3"]::after,
[id^="-4"]::after,
[id^="-5"]::after,
[id^="-6"]::after,
[id^="-7"]::after,
[id^="-8"]::after,
[id^="-9"]::after,
[id^="-0"]::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-07) !important;
}

/* HTML #08
 * No height or width attr on this tag
 */
:not(img):not(object):not(embed):not(svg):not(canvas)[width],
:not(img):not(object):not(embed):not(svg):not(canvas)[height] {
	counter-increment: error error-other !important;
}
:not(img):not(object):not(embed):not(svg):not(canvas)[width]::after,
:not(img):not(object):not(embed):not(svg):not(canvas)[height]::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-08) !important;
}

/* HTML #09
 * No empty buttons
 */
button:empty:not([aria-label]):not([aria-labelledby]):not([title]),
button:-moz-only-whitespace:not([aria-label]):not([aria-labelledby]):not([title]) {
	counter-increment: error error-other !important;
}
button:empty:not([aria-label]):not([aria-labelledby]):not([title])::after,
button:-moz-only-whitespace:not([aria-label]):not([aria-labelledby]):not([title])::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-09) !important;
}

/* HTML #10
 * No empty hrefs
 */
a[href=""],
a[href=" "] {
	counter-increment: error error-link !important;
}
a[href=""]::after,
a[href=" "]::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-10) !important;
}

/* HTML #11
 * No empty links
 */
a:empty[title=""],
a:empty[aria-label=""],
a:empty[aria-labelledby=""],
a:empty:not([title]):not([aria-label]):not([aria-labelledby]),
a:-moz-only-whitespace[title=""],
a:-moz-only-whitespace[aria-label=""],
a:-moz-only-whitespace[aria-labelledby=""],
a:-moz-only-whitespace:not([title]):not([aria-label]):not([aria-labelledby]) {
	counter-increment: error error-link !important;
}
a:empty[title=""]::after,
a:empty[aria-label=""]::after,
a:empty[aria-labelledby=""]::after,
a:empty:not([title]):not([aria-label]):not([aria-labelledby])::after,
a:-moz-only-whitespace[title=""]::after,
a:-moz-only-whitespace[aria-label=""]::after,
a:-moz-only-whitespace[aria-labelledby=""]::after,
a:-moz-only-whitespace:not([title]):not([aria-label]):not([aria-labelledby])::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-11) !important;
}

/* HTML #12
 * No name attribut
 */
[type="radio"]:not([name]),
[type="checkbox"]:not(:only-of-type):not([name]) {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
[type="radio"]:not([name]) + ::before,
[type="checkbox"]:not(:only-of-type):not([name]) + ::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-12) !important;
}

/* HTML #13
 * Nested interactive elements
 */
a a[href],
button a[href],
a audio[controls],
button audio[controls],
a video[controls],
button video[controls],
a button,
button button,
a details,
button details,
a embed,
button embed,
a iframe,
button iframe,
a img[usemap],
button img[usemap],
a label,
button label,
a select,
button select,
a textarea,
button textarea,
a input[type]:not([hidden]),
button input[type]:not([hidden]),
form form,
label label,
meter meter,
progress progress {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
a a[href]::after,
button a[href]::after,
a audio[controls]::after,
button audio[controls]::after,
a video[controls]::after,
button video[controls]::after,
a button::after,
button button::after,
a details::after,
button details::after,
a embed::after,
button embed::after,
a iframe::after,
button iframe::after,
a img[usemap]::after,
button img[usemap]::after,
a label::after,
button label::after,
a select::after,
button select::after,
a textarea::after,
button textarea::after,
a input[type]:not([hidden])::after,
button input[type]:not([hidden])::after,
form form::after,
label label::after,
meter meter::after,
progress progress::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-13) !important;
}

/* HTML #14
 * Form missing an [action]
 */
form:not([action]):not([method="get"]):not([method="post"]):not([method="dialog"]),
form[action=""]:not([method="get"]):not([method="post"]):not([method="dialog"]) {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
form:not([action]):not([method="get"]):not([method="post"]):not([method="dialog"])::after,
form[action=""]:not([method="get"]):not([method="post"]):not([method="dialog"])::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-14) !important;
}

/* HTML #15
 * Missing alternative for img 
 */
img[alt=" "],
area[alt=" "],
input[type="image"][alt=" "],
img:not([alt]),
area:not([alt]),
input[type="image"]:not([alt]) {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-img !important;
}
img[alt=" "] + ::before,
area[alt=" "] + ::before,
input[type="image"][alt=" "] + ::before,
img:not([alt]) + ::before,
area:not([alt]) + ::before,
input[type="image"]:not([alt]) + ::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-15) !important;
}

/* HTML #16
 * Missing label
 */
input:not([type="button"]):not([type="submit"]):not([type="hidden"]):not([type="reset"]):not([type="image"]):not([id]):not([aria-label]):not([title]):not([aria-labelledby]),
textarea:not([id]):not([aria-label]):not([aria-labelledby]),
select:not([id]):not([aria-label]):not([aria-labelledby]) {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-label !important;
}
input:not([type="button"]):not([type="submit"]):not([type="hidden"]):not([type="reset"]):not([type="image"]):not([id]):not([aria-label]):not([title]):not([aria-labelledby])
	+ ::before,
textarea:not([id]):not([aria-label]):not([aria-labelledby]) + ::before,
select:not([id]):not([aria-label]):not([aria-labelledby]) + ::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-16) !important;
}

/* HTML #17
 * Empty page title
 */
title:empty,
title:-moz-only-whitespace {
	/* keep header element visible */
	display: block;
	counter-increment: error error-other !important;
}
title:empty::after,
title:-moz-only-whitespace::after {
	display: block;
	margin-bottom: 1rem;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-17) !important;
}

/* HTML #18
 * Empty iframe title
 */
iframe:not([title]),
iframe[title=" "],
iframe[title=""] {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
iframe:not([title]) + ::before,
iframe[title=" "] + ::before,
iframe[title=""] + ::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-18) !important;
}

/* HTML #19
 * Button without type
 * If it doesn't submit anything, it should have the [type="button"]
 */
button:not([type]),
button[type=" "],
button[type=""] {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
button:not([type])::after,
button[type=" "]::after,
button[type=""]::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-19) !important;
}

/* HTML #20
 * Input without type
 */
input:not([type]),
input[type=" "],
input[type=""] {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
input:not([type]) + ::before,
input[type=" "] + ::before,
input[type=""] + ::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-20) !important;
}

/* HTML #21
 * Tabindex > 0
 */
[tabindex]:not([tabindex="0"]):not([tabindex="-1"]) {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
[tabindex]:not([tabindex="0"]):not([tabindex="-1"])::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-21) !important;
}

/* HTML #22
 * Invalid sibling in a definition list
 */
dt + :not(dd),
:not(dt):not(dd) + dd {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
:not(dl) > dt::after,
:not(dl) > dd::after,
dl > :not(dt):not(dd):not(div)::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-22) !important;
}

/* HTML #23
 * figcaption outside a figure
 */
:not(figure) > figcaption {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
:not(figure) > figcaption::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-23) !important;
}

/* HTML #24
 * Invalid nesting in a list
 */
ul > :not(li),
ol > :not(li),
:not(ul):not(ol) > li {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
ul > :not(li)::after,
ol > :not(li)::after,
:not(ul):not(ol) > li::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-24) !important;
}

/* HTML #25
 * Invalid nesting in the body
 */
nav main,
aside main,
footer main,
header main,
article main,
:not(tr) > td,
:not(tr) > th,
colgroup *:not(col),
:not(colgroup) > col,
tr > :not(td):not(th),
optgroup > :not(option),
:not(select) > optgroup,
:not(fieldset) > legend,
select > :not(option):not(optgroup),
:not(select):not(optgroup) > option,
table > *:not(thead):not(tfoot):not(tbody):not(tr):not(colgroup):not(caption),
address h1,
address h2,
address h3,
address h4,
address h5,
address h6,
address nav,
address aside,
address header,
address footer,
address address,
address article,
address section {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
nav main::after,
aside main::after,
footer main::after,
header main::after,
article main::after,
:not(tr) > td::after,
:not(tr) > th::after,
colgroup:not(col)::after,
:not(colgroup) > col::after,
tr > :not(td):not(th)::after,
optgroup > :not(option)::after,
:not(select) > optgroup::after,
:not(fieldset) > legend::after,
select > :not(option):not(optgroup)::after,
:not(select):not(optgroup) > option::after,
table
	> :not(thead):not(tfoot):not(tbody):not(tr):not(colgroup):not(caption)::after,
address h1::after,
address h2::after,
address h3::after,
address h4::after,
address h5::after,
address h6::after,
address nav::after,
address aside::after,
address header::after,
address footer::after,
address address::after,
address article::after,
address section::after {
	display: block;
	margin-bottom: 1rem;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-25) !important;
}

/* HTML #26
 * Misused sectioning tags
 */
aside > aside:first-child,
article > aside:first-child,
aside > article:first-child,
aside > section:first-child,
section > section:first-child,
article > section:first-child,
article > article:first-child {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
aside > aside:first-child::after,
article > aside:first-child::after,
aside > article:first-child::after,
aside > section:first-child::after,
section > section:first-child::after,
article > section:first-child::after,
article > article:first-child::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-26) !important;
}

/* HTML #27
 * div can't be inside inline tag
 */
b div,
i div,
q div,
em div,
abbr div,
cite div,
code div,
span div,
small div,
label div,
strong div {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
b div::after,
i div::after,
q div::after,
em div::after,
abbr div::after,
cite div::after,
code div::after,
span div::after,
small div::after,
label div::after,
strong div::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-27) !important;
}

/* HTML #28
 * A label without a [for] attribute
 */
label:not([for]) {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-label !important;
}
label:not([for])::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-28) !important;
}

/* HTML #29
 * legend must be a fieldset's:first-child
 */
fieldset > *:not(legend):first-child,
fieldset > legend:not(:first-child) {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
fieldset > :not(legend):first-child::after,
fieldset > legend:not(:first-child)::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-29) !important;
}

/* HTML #30
 * Every data table must have a caption
 */
table:not([role="presentation"]) > caption:not(:first-child),
table:not([role="presentation"]) > *:first-child:not(caption) {
	outline: 4px solid var(--warn-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: warning warning-other !important;
}
table:not([role="presentation"]) > caption:not(:first-child)::after,
table:not([role="presentation"]) > :first-child:not(caption)::after {
	display: block;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-30) !important;
}

/* HTML #31
 * Unsecured [target=_blank]
 */
[target$="blank"]:not([rel]),
[target$="blank"]:not([rel*="noopener"]),
[target$="blank"]:not([rel*="noreferrer"]) {
	outline: 4px solid var(--warn-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: warning warning-target !important;
}
[target$="blank"]:not([rel])::after,
[target$="blank"]:not([rel*="noopener"])::after,
[target$="blank"]:not([rel*="noreferrer"])::after {
	display: block;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-31) !important;
}

/* HTML #32
 * Form missing an [action]
 */
form:not([action]),
form[action=" "],
form[action=""] {
	outline: 4px solid var(--warn-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: warning warning-other !important;
}
form:not([action])::after,
form[action=" "]::after,
form[action=""]::after {
	display: block;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-32) !important;
}

/* HTML #33
 * No [href]
 */
a:not([href]) {
	outline: 4px solid var(--warn-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: warning warning-href !important;
}
a:not([href])::after {
	display: block;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-33) !important;
}

/* HTML #34
 * No HTTPS
 */
[src^="http:"],
[href^="http:"] {
	outline: 4px solid var(--warn-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: warning warning-https !important;
}
[src^="http:"]::after,
[href^="http:"]::after {
	display: block;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-34) !important;
}

/* HTML #35
 * Placeholder can't replace a label
 */
[placeholder]:not([title]):not([aria-label]):not([aria-labelledby]) {
	outline: 4px solid var(--warn-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: warning warning-other !important;
}
[placeholder]:not([title]):not([aria-label]):not([aria-labelledby]) + ::before {
	display: block;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-35) !important;
}

/* HTML #36
 * Subresource Integrity
 */
script[src^="http"][src*="cdn"]:not([integrity]):not([crossorigin]),
script[src^="http"][src*="unpkg.com"]:not([integrity]):not([crossorigin]),
script[src^="http"][src*="googleapis"]:not([integrity]):not([crossorigin]),
script[src^="http"][src*="code"]:not([integrity]):not([crossorigin]) {
	/* rend les pseudo-éléments visibles dans le header */
	display: block;
	counter-increment: warning warning-other !important;
}
script[src^="http"][src*="cdn"]:not([integrity]):not([crossorigin])::after,
script[src^="http"][src*="unpkg.com"]:not([integrity]):not([crossorigin])::after,
script[src^="http"][src*="googleapis"]:not([integrity]):not([crossorigin])::after,
script[src^="http"][src*="code"]:not([integrity]):not([crossorigin])::after {
	display: block;
	margin-bottom: 1rem;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-36) !important;
}

/* HTML #37
 * Obsolete tags
 */
applet,
acronym,
bgsound,
dir,
frame,
frameset,
noframes,
hgroup,
isindex,
listing,
nextid,
noembed,
plaintext,
rb,
rtc,
strike,
xmp,
basefont,
big,
blink,
center,
font,
marquee,
multicol,
nobr,
spacer,
tt,
keygen,
menu,
menuitem {
	outline: 4px solid var(--warn-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: warning warning-other !important;
}
applet::after,
acronym::after,
bgsound::after,
dir::after,
frame::after,
frameset::after,
noframes::after,
hgroup::after,
isindex::after,
listing::after,
nextid::after,
noembed::after,
plaintext::after,
rb::after,
rtc::after,
strike::after,
xmp::after,
basefont::after,
big::after,
blink::after,
center::after,
font::after,
marquee::after,
multicol::after,
nobr::after,
spacer::after,
tt::after,
keygen::after,
menu::after,
menuitem::after {
	display: block;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-37) !important;
}

/* HTML #38
 * decorative or informative SVG 
 */
svg[role="img"]:not([aria-hidden="true"]),
svg[aria-hidden="true"][title],
svg[aria-hidden="true"][aria-label],
svg[aria-hidden="true"][aria-labelledby],
svg[aria-hidden="true"][aria-describedby] {
	outline: 4px solid var(--warn-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-img !important;
}

svg:not([aria-hidden="true"]):not([role="img"])::before,
svg[aria-hidden="true"][title]::before,
svg[aria-hidden="true"][aria-label]::before,
svg[aria-hidden="true"][aria-labelledby]::before,
svg[aria-hidden="true"][aria-describedby]::before {
	display: block;
	color: var(--warn-font-color);
	background: var(--warn-bg-color);
	border: var(--warn-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-38) !important;
}

/* HTML #39
 * accessible SVG 
 */
svg[role="img"]:not([aria-label]) {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-img !important;
}

svg[role="img"]:not([aria-label]) + *::before {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--error-pic) var(--alert-html-39) !important;
}

/* HTML #40
 * Avoid skipped heading levels, thanks @Una
 */
 h2 ~ h1,
 h3 ~ h1,
 h4 ~ h1,
 h5 ~ h1,
 h6 ~ h1,
 h3 ~ h2:first-of-type,
 h4 ~ h2:first-of-type,
 h5 ~ h2:first-of-type,
 h6 ~ h2:first-of-type,
 h4 ~ h3:first-of-type,
 h5 ~ h3:first-of-type,
 h6 ~ h4:first-of-type,
 h6 ~ h5:first-of-type {
	outline: 4px solid var(--error-border-color) !important;
	outline-offset: -4px !important;
	counter-increment: error error-other !important;
}
h2 ~ h1::after,
h3 ~ h1::after,
h4 ~ h1::after,
h5 ~ h1::after,
h6 ~ h1::after,
h3 ~ h2:first-of-type::after,
h4 ~ h2:first-of-type::after,
h5 ~ h2:first-of-type::after,
h6 ~ h2:first-of-type::after,
h4 ~ h3:first-of-type::after,
h5 ~ h3:first-of-type::after,
h6 ~ h4:first-of-type::after,
h6 ~ h5:first-of-type::after {
	display: block;
	color: var(--error-font-color);
	background: var(--error-bg-color);
	border: var(--error-font-color) dashed 1px;
	padding: 5px 10px;
	content: var(--warn-pic) var(--alert-html-40) !important;
}


/**
 * TESTS TODO
 * - SVG role or aria-hidden  
 * - Eviter à tout prix les button > i ou a > i vides, obliger un élément avec .sr-only dedans ou à côté
 

 * TODO BY YOURSELF :
 * - Bonne fermeture des tags et des attributs
 * - Est-ce qu'une balise form existe quand il y a des champs...
 * - S'assurer que le contenu des title soit identique à la propriété aria-label pour les images et les éléments interactifs
 * - Eviter les balises inline autour des balises block, ces tests sont trop nombreux et nuisent à la performance de ce bookmarklet, d'autant plus qu'ils peuvent être détectés avec https://validator.w3.org/nu
 */
