@charset 'UTF-8';

/* colors */

:root {
    --error-bg-color: white;
    --error-border-color: purple;
    --error-font-color: purple;
    --warn-bg-color: white;
    --warn-border-color: brown;
    --warn-font-color: brown;
}


/* symbols 
*
*☠[ERROR]
*var(--error-bg-color)
*var(--error-border-color)
*var(--error-font-color)
*
*⚠[WARNING]
*var(--warn-bg-color)
*var(--warn-border-color)
*var(--warn-font-color)
*/

/* alert count with CSS
Thanks to Gaël Poupard https://ffoodd.github.io/a11y.css/
*/
html {
    counter-reset: error warning obsolete advice;
}
body::after {
    background-image:linear-gradient(to bottom, transparent, transparent 1.4em,var(--error-border-color) 1.4em,var(--error-border-color) 1.6em,transparent 1.6em, transparent 100%);
    background-color:#737373;
    background-position:0.5em 0;
    background-repeat:no-repeat;
    background-size:0.5em 100%;
    bottom:1em;
    color: #fff;
    font:700 1.125rem/1.5 sans-serif;
    font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
    height:auto;
    left:1em;
    padding:0.75em 1em 0.75em 1.5em;
    position:fixed;
    right:auto;
    top:auto;
    width:auto;
    white-space:pre;
    z-index:2147483647;
    content:"Errors" ": " counter(error) "\a";
}
head {
    display:block;
}

/* Framework #01
Bootstrap inheritance check */
*:not(.row) > [class^="col-"] {
    counter-increment: error !important;
    outline: 4px solid (--error-border-color) !important;
    outline-offset: -4px !important;
}
*:not(.row) > [class^="col-"]:first-child::before {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-fw-01) !important;
}

/* Framework #02
Floats inheritance check for Bootstrap, Google Material Design and Zurb Foundation  */
*:not(.clearfix) > .float-left,    
*:not(.clearfix) > .float-right {
    counter-increment: error !important;
    outline: 4px solid (--error-border-color) !important;
    outline-offset: -4px !important;
}
*:not(.clearfix) > .float-left::before,
*:not(.clearfix) > .float-right::before {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-fw-02) !important;
}


/* HTML #01
No language is bad */
html:not([lang]),
html[lang=""] {
    counter-increment: error !important;
}
html:not([lang]) body::before,
html[lang=""] body::before {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-01) !important;
}

/* HTML #02
Charset */
meta[charset]:not([charset="UTF-8"]){
    /* keep header pseudo elements visible */
    display: block;
    counter-increment: error !important;
}
meta[charset]:not([charset="UTF-8"])::after{
    display: block;
    margin-bottom: 1rem;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-02) !important;
}

/* HTML #03
Charset position */
meta[charset="UTF-8"]:not(:first-child){
    display: block;
    counter-increment: error !important;
}
meta[charset="UTF-8"]:not(:first-child)::after{
    display: block;
    margin-bottom: 1rem;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-03) !important;
}

/* HTML #04
Viewport */
meta[name="viewport"][content*="user-scalable=no"],
meta[name="viewport"][content*="maximum-scale"],
meta[name="viewport"][content*="minimum-scale"] {
    display: block;
    counter-increment: error !important;
}
meta[name="viewport"][content*="user-scalable=no"]::after,
meta[name="viewport"][content*="maximum-scale"]::after,
meta[name="viewport"][content*="minimum-scale"]::after {
    display: block;
    margin-bottom: 1rem;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-04) !important;
}

/* HTML #05
No meta refresh */
head > meta[http-equiv="refresh"]{
    /* rend les pseudo-éléments visibles dans le header */
    display: block; 
    counter-increment: error !important;
}
head > meta[http-equiv="refresh"]::after{
    display: block;
    margin-bottom: 1rem;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-05) !important;
}


/* a11y.css some alerts selection from the huge work of Gaël Poupard https://ffoodd.github.io/a11y.css/
*/

/* HTML #06
Badly bound label: use for to bound it with the input id's */
label[for=""], label[for=" "] {
    counter-increment: error !important;
    outline: 4px solid (--error-border-color) !important;
    outline-offset: -4px !important;
}
label[for=""]::after, label[for=" "]::after {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-06) !important;
}

/* HTML #07
Id name with bad syntax */
[id^="1"], [id^="2"], [id^="3"], [id^="4"], [id^="5"], [id^="6"], [id^="7"], [id^="8"], [id^="9"], [id^="0"], [id^="--"], [id^="-1"], [id^="-2"], [id^="-3"], [id^="-4"], [id^="-5"], [id^="-6"], [id^="-7"], [id^="-8"], [id^="-9"], [id^="-0"] {
    counter-increment: error !important;
    outline: 4px solid (--error-border-color) !important;
    outline-offset: -4px !important;
}
[id^="1"]::after, [id^="2"]::after, [id^="3"]::after, [id^="4"]::after, [id^="5"]::after, [id^="6"]::after, [id^="7"]::after, [id^="8"]::after, [id^="9"]::after, [id^="0"]::after, [id^="--"]::after, [id^="-1"]::after, [id^="-2"]::after, [id^="-3"]::after, [id^="-4"]::after, [id^="-5"]::after, [id^="-6"]::after, [id^="-7"]::after, [id^="-8"]::after, [id^="-9"]::after, [id^="-0"]::after {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-07) !important;
}

/* HTML #08
No height or width attr on this tag */
:not(img):not(object):not(embed):not(svg):not(canvas)[width],
:not(img):not(object):not(embed):not(svg):not(canvas)[height] {
    counter-increment: error !important;
}
:not(img):not(object):not(embed):not(svg):not(canvas)[width]::after,
:not(img):not(object):not(embed):not(svg):not(canvas)[height]::after {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-08) !important;
}

/* HTML #09
No empty buttons */
button:empty:not([aria-label]):not([aria-labelledby]):not([title]),
button:-moz-only-whitespace:not([aria-label]):not([aria-labelledby]):not([title]) {
    counter-increment: error !important;
}
button:empty:not([aria-label]):not([aria-labelledby]):not([title])::after,
button:-moz-only-whitespace:not([aria-label]):not([aria-labelledby]):not([title])::after {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-09) !important;
}

/* HTML #10
No empty hrefs */
a[href=""], 
a[href=" "]{
    counter-increment: error !important;
}
a[href=""]::after, 
a[href=" "]::after {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-10) !important;
}

/* HTML #11
No empty links */
a:empty[title=""],
a:empty[aria-label=""],
a:empty[aria-labelledby=""],
a:empty:not([title]):not([aria-label]):not([aria-labelledby]),
a:-moz-only-whitespace[title=""],
a:-moz-only-whitespace[aria-label=""],
a:-moz-only-whitespace[aria-labelledby=""],
a:-moz-only-whitespace:not([title]):not([aria-label]):not([aria-labelledby]) {
    counter-increment: error !important;
}
a:empty[title=""]::after,
a:empty[aria-label=""]::after,
a:empty[aria-labelledby=""]::after,
a:empty:not([title]):not([aria-label]):not([aria-labelledby])::after,
a:-moz-only-whitespace[title=""]::after,
a:-moz-only-whitespace[aria-label=""]::after,
a:-moz-only-whitespace[aria-labelledby=""]::after,
a:-moz-only-whitespace:not([title]):not([aria-label]):not([aria-labelledby])::after {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-11) !important;
}

/* HTML #12
No name attribut */
[type="radio"]:not([name]),
[type="checkbox"]:not(:only-of-type):not([name]) {
    outline: 4px solid var(--error-border-color) !important;
    outline-offset: -4px !important;
    counter-increment: error !important;
}
[type="radio"]:not([name]) + ::before,
[type="checkbox"]:not(:only-of-type):not([name]) + ::before {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-12) !important;
}

/* HTML #13
Nested interactive elements */
a a[href],
button a[href],
a audio[controls],
button audio[controls],
a video[controls],
button video[controls],
a button,
button button,
a details,
button details,
a embed,
button embed,
a iframe,
button iframe,
a img[usemap],
button img[usemap],
a label,
button label,
a select,
button select,
a textarea,
button textarea,
a input[type]:not([hidden]),
button input[type]:not([hidden]),
form form,
label label,
meter meter,
progress progress {
    outline: 4px solid var(--error-border-color) !important;
    outline-offset: -4px !important;
    counter-increment: error !important;
}
a a[href]::after,
button a[href]::after,
a audio[controls]::after,
button audio[controls]::after,
a video[controls]::after,
button video[controls]::after,
a button::after,
button button::after,
a details::after,
button details::after,
a embed::after,
button embed::after,
a iframe::after,
button iframe::after,
a img[usemap]::after,
button img[usemap]::after,
a label::after,
button label::after,
a select::after,
button select::after,
a textarea::after,
button textarea::after,
a input[type]:not([hidden])::after,
button input[type]:not([hidden])::after,
form form::after,
label label::after,
meter meter::after,
progress progress::after {
    display: block;
    color: var(--error-font-color);
    background: var(--error-bg-color);
    border: var(--error-font-color) dashed 1px;
    padding: 5px 10px;
    content: var(--alert-html-13) !important;
}





/*https://ffoodd.github.io/a11y.css/errors.html*/

/**
 * TODO BY YOURSELF :
 * - Bonne fermeture des tags et des attributs
 * - Est-ce qu'une balise form existe quand il y a des champs...
 */


